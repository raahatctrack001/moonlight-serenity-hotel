generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hotel {
  id                  String   @id @default(uuid())
  userId              String

  title               String   
  description         String   
  image               String   
  country             String   
  state               String   
  city                String   
  locationDescription String   

  gym                 Boolean  @default(false)
  spa                 Boolean  @default(false)
  bar                 Boolean  @default(false)
  laundry             Boolean  @default(false)
  restaurant          Boolean  @default(false)
  shopping            Boolean  @default(false)
  freeParking         Boolean  @default(false)
  bikeRental          Boolean  @default(false)
  wifi                Boolean  @default(false)
  movieNights         Boolean  @default(false)
  swimmingPool        Boolean  @default(false)
  coffeeShop          Boolean  @default(false)

  rooms               Room[]  
  bookings            Booking[]

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Room {
  id                  String   @id @default(uuid())
  title               String                 
  description         String
  bedCount           Int      @default(0)
  guestCount         Int      @default(0)
  bathroomCount      Int      @default(0)
  kingBed           Int      @default(0)
  queenBed          Int      @default(0)
  image             String
  breakfastPrice    Int      @default(0)
  roomPrice         Int      @default(0)
  roomService       Boolean  @default(false)
  TV                Boolean  @default(false)
  balcony           Boolean  @default(false)
  wifi              Boolean  @default(false)
  cityView          Boolean  @default(false)
  oceanView         Boolean  @default(false)
  mountainView      Boolean  @default(false)
  forestView        Boolean  @default(false)
  airCondition      Boolean  @default(false)
  soundProofed      Boolean  @default(false)

  hotel             Hotel?   @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId           String?

  bookings          Booking[]
}

model Booking {
  id                String   @id @default(uuid())
  username         String
  userId           String
  roomId           String
  hotelId          String
  hotelOwnerId     String
  startDate        DateTime
  endDate          DateTime
  breakfastIncluded Boolean  @default(false)
  currency         String
  totalPrice       Int
  paymentState     String
  paymentIntentId  String?
  bookedAt         DateTime  @default(now())

  hotel            Hotel?   @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  room             Room?    @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@index([hotelId])
  @@index([roomId])
}
